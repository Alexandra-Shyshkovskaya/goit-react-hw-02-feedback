{"version":3,"sources":["Components/Container/Container.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics.js","App.js","index.js","Components/Container/Container.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Container","children","className","styles","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","Notification","message","App","state","handleClick","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAWeA,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,K,gBCoB7BG,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKJ,UAAU,oBAAf,SACGG,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEN,UAAWC,IAAOM,OAClBC,KAAK,SAELC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,SCEEI,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKf,UAAU,sBAAf,UACE,sCAASW,KACT,yCAAYC,KACZ,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCHEC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOlB,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIC,UAAU,QAAd,SAAuBiB,IACtBlB,MAICmB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,kCACE,4BAAIA,OA2DOC,E,4MAtDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,YAAc,SAAChB,GACb,EAAKiB,UAAS,SAACC,GAAD,sBACXlB,EAASkB,EAAUlB,GAAU,O,EAIlCmB,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBa,gCAAkC,WAChC,IAAQf,EAAS,EAAKU,MAAdV,KACFG,EAAQ,EAAKW,qBAEnB,OAAOX,EAAQa,KAAKC,MAAc,IAAPjB,EAAcG,GAAS,G,4CAGpD,WACE,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASG,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiByB,KAAKP,gBAI1B,cAAC,EAAD,CAASL,MAAM,aAAf,SACiC,IAA9BY,KAAKJ,qBACJ,cAAC,EAAD,CACEd,KAAMkB,KAAKR,MAAMV,KACjBC,QAASiB,KAAKR,MAAMT,QACpBC,IAAKgB,KAAKR,MAAMR,IAChBC,MAAOe,KAAKJ,qBACZV,mBAAoBc,KAAKH,oCAG3B,cAAC,EAAD,CAAcP,QAAQ,iC,GA9ClBW,IAAMC,W,MCZxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.33ed5b56.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className=\"Feedback-controls\">\n    {options.map((option) => (\n      <button\n        className={styles.button}\n        type=\"button\"\n        key={option}\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className=\"Statistics-counters\">\n    <p>Good:{good}</p>\n    <p>Neutral:{neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {positivePercentage}%</p>\n  </div>\n);\n\nexport default Statistics;\n","import React from \"react\";\nimport Container from \"./Components/Container/Container\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Components/Statistics\";\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className=\"title\">{title}</h2>\n    {children}\n  </section>\n);\n\nconst Notification = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (option) => {\n    this.setState((prevState) => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n\n    return total ? Math.round((good * 100) / total) : 0;\n  };\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={[\"good\", \"neutral\", \"bad\"]}\n              onLeaveFeedback={this.handleClick}\n            />\n          </Section>\n\n          <Section title=\"Statistics\">\n            {this.countTotalFeedback() !== 0 ? (\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n            ) : (\n              <Notification message=\"No feedback given\"></Notification>\n            )}\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1nLTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2prkV\"};"],"sourceRoot":""}